/*
 * This file is generated by jOOQ.
 */
package edu.java.scrapper.domain.jooq.tables.records;


import edu.java.scrapper.domain.jooq.tables.UsersLinksArchive;

import jakarta.validation.constraints.Size;

import java.beans.ConstructorProperties;
import java.time.OffsetDateTime;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class UsersLinksArchiveRecord extends UpdatableRecordImpl<UsersLinksArchiveRecord> implements Record5<Long, Long, String, OffsetDateTime, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>USERS_LINKS_ARCHIVE.ID</code>.
     */
    public void setId(@Nullable Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>USERS_LINKS_ARCHIVE.ID</code>.
     */
    @Nullable
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>USERS_LINKS_ARCHIVE.USER_ID</code>.
     */
    public void setUserId(@NotNull Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>USERS_LINKS_ARCHIVE.USER_ID</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getUserId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>USERS_LINKS_ARCHIVE.URL</code>.
     */
    public void setUrl(@NotNull String value) {
        set(2, value);
    }

    /**
     * Getter for <code>USERS_LINKS_ARCHIVE.URL</code>.
     */
    @jakarta.validation.constraints.NotNull
    @Size(max = 1000000000)
    @NotNull
    public String getUrl() {
        return (String) get(2);
    }

    /**
     * Setter for <code>USERS_LINKS_ARCHIVE.ADDED_AT</code>.
     */
    public void setAddedAt(@NotNull OffsetDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>USERS_LINKS_ARCHIVE.ADDED_AT</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public OffsetDateTime getAddedAt() {
        return (OffsetDateTime) get(3);
    }

    /**
     * Setter for <code>USERS_LINKS_ARCHIVE.DELETED_AT</code>.
     */
    public void setDeletedAt(@Nullable OffsetDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>USERS_LINKS_ARCHIVE.DELETED_AT</code>.
     */
    @Nullable
    public OffsetDateTime getDeletedAt() {
        return (OffsetDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row5<Long, Long, String, OffsetDateTime, OffsetDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row5<Long, Long, String, OffsetDateTime, OffsetDateTime> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<Long> field1() {
        return UsersLinksArchive.USERS_LINKS_ARCHIVE.ID;
    }

    @Override
    @NotNull
    public Field<Long> field2() {
        return UsersLinksArchive.USERS_LINKS_ARCHIVE.USER_ID;
    }

    @Override
    @NotNull
    public Field<String> field3() {
        return UsersLinksArchive.USERS_LINKS_ARCHIVE.URL;
    }

    @Override
    @NotNull
    public Field<OffsetDateTime> field4() {
        return UsersLinksArchive.USERS_LINKS_ARCHIVE.ADDED_AT;
    }

    @Override
    @NotNull
    public Field<OffsetDateTime> field5() {
        return UsersLinksArchive.USERS_LINKS_ARCHIVE.DELETED_AT;
    }

    @Override
    @Nullable
    public Long component1() {
        return getId();
    }

    @Override
    @NotNull
    public Long component2() {
        return getUserId();
    }

    @Override
    @NotNull
    public String component3() {
        return getUrl();
    }

    @Override
    @NotNull
    public OffsetDateTime component4() {
        return getAddedAt();
    }

    @Override
    @Nullable
    public OffsetDateTime component5() {
        return getDeletedAt();
    }

    @Override
    @Nullable
    public Long value1() {
        return getId();
    }

    @Override
    @NotNull
    public Long value2() {
        return getUserId();
    }

    @Override
    @NotNull
    public String value3() {
        return getUrl();
    }

    @Override
    @NotNull
    public OffsetDateTime value4() {
        return getAddedAt();
    }

    @Override
    @Nullable
    public OffsetDateTime value5() {
        return getDeletedAt();
    }

    @Override
    @NotNull
    public UsersLinksArchiveRecord value1(@Nullable Long value) {
        setId(value);
        return this;
    }

    @Override
    @NotNull
    public UsersLinksArchiveRecord value2(@NotNull Long value) {
        setUserId(value);
        return this;
    }

    @Override
    @NotNull
    public UsersLinksArchiveRecord value3(@NotNull String value) {
        setUrl(value);
        return this;
    }

    @Override
    @NotNull
    public UsersLinksArchiveRecord value4(@NotNull OffsetDateTime value) {
        setAddedAt(value);
        return this;
    }

    @Override
    @NotNull
    public UsersLinksArchiveRecord value5(@Nullable OffsetDateTime value) {
        setDeletedAt(value);
        return this;
    }

    @Override
    @NotNull
    public UsersLinksArchiveRecord values(@Nullable Long value1, @NotNull Long value2, @NotNull String value3, @NotNull OffsetDateTime value4, @Nullable OffsetDateTime value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersLinksArchiveRecord
     */
    public UsersLinksArchiveRecord() {
        super(UsersLinksArchive.USERS_LINKS_ARCHIVE);
    }

    /**
     * Create a detached, initialised UsersLinksArchiveRecord
     */
    @ConstructorProperties({ "id", "userId", "url", "addedAt", "deletedAt" })
    public UsersLinksArchiveRecord(@Nullable Long id, @NotNull Long userId, @NotNull String url, @NotNull OffsetDateTime addedAt, @Nullable OffsetDateTime deletedAt) {
        super(UsersLinksArchive.USERS_LINKS_ARCHIVE);

        setId(id);
        setUserId(userId);
        setUrl(url);
        setAddedAt(addedAt);
        setDeletedAt(deletedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UsersLinksArchiveRecord
     */
    public UsersLinksArchiveRecord(edu.java.scrapper.domain.jooq.tables.pojos.UsersLinksArchive value) {
        super(UsersLinksArchive.USERS_LINKS_ARCHIVE);

        if (value != null) {
            setId(value.getId());
            setUserId(value.getUserId());
            setUrl(value.getUrl());
            setAddedAt(value.getAddedAt());
            setDeletedAt(value.getDeletedAt());
            resetChangedOnNotNull();
        }
    }
}
